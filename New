import matplotlib.pyplot as plt

monthly_focus = []

for label, (start_date, end_date) in month_windows.items():
    started_tasks = df[
        df['First_In_Progress'].notna() &
        (df['First_In_Progress'] >= start_date) &
        (df['First_In_Progress'] <= end_date)
    ]

    assigned = started_tasks['Story Points'].sum(min_count=1)
    completed = started_tasks[started_tasks['Done'].notna()]['Story Points'].sum(min_count=1)
    missing_count = started_tasks['Story Points'].isna().sum()

    if pd.notna(assigned) and assigned > 0:
        completion_rate = (completed / assigned) * 100
    else:
        completion_rate = 0

    monthly_focus.append({
        'Month': label,
        'Completion %': round(completion_rate, 1),
        'Missing Count': missing_count
    })

focus_df = pd.DataFrame(monthly_focus)

# Plot
plt.figure(figsize=(8, 5))
bars = plt.bar(focus_df['Month'], focus_df['Completion %'], color='navy')

# Annotate with % and missing count (no SP wording)
for bar, pct, missing in zip(bars, focus_df['Completion %'], focus_df['Missing Count']):
    x = bar.get_x() + bar.get_width() / 2
    y = bar.get_height()
    label = f"{pct:.0f}%"
    if missing > 0:
        label += f"\n({missing} missing)"
    plt.text(x, y + 1, label, ha='center', va='bottom', fontsize=9)

# Final formatting
plt.title('PI 25.1 Completion Rate per Month')
plt.ylabel('Completion %')
plt.ylim(0, 110)
plt.grid(axis='y', linestyle='--', alpha=0.5)
plt.tight_layout()
plt.show()
