import pandas as pd
import matplotlib.pyplot as plt

# Step 1: Extract Done_Week
df['Done_Week'] = pd.to_datetime(df['Done']).dt.isocalendar().week

# Step 2: Filter to tasks started within PI 25.1 (Janâ€“Mar 2025)
pi_start = pd.to_datetime('2025-01-01')
pi_end = pd.to_datetime('2025-03-31')

pi_tasks = df[
    df['First_In_Progress'].notna() &
    (df['First_In_Progress'] >= pi_start) &
    (df['First_In_Progress'] <= pi_end) &
    df['Done'].notna()
]

# Step 3: Group by Done_Week and count tasks
weekly_completion = pi_tasks.groupby('Done_Week')['Issue key'].count().reset_index()
weekly_completion.rename(columns={'Done_Week': 'Week', 'Issue key': 'Tasks Completed'}, inplace=True)

# Step 4: Fill all active weeks for continuity
all_weeks = pd.DataFrame({'Week': sorted(df['Done_Week'].dropna().unique())})
weekly_completion = all_weeks.merge(weekly_completion, on='Week', how='left')
weekly_completion['Tasks Completed'] = weekly_completion['Tasks Completed'].fillna(0).astype(int)

# Step 5: Plot
plt.figure(figsize=(10, 5))
plt.plot(weekly_completion['Week'], weekly_completion['Tasks Completed'],
         marker='o', linestyle='-', color='navy', label='Tasks Completed')

# Add average trendline
avg_tasks = weekly_completion['Tasks Completed'].mean()
plt.axhline(avg_tasks, color='darkgreen', linestyle='--', label=f'Avg: {avg_tasks:.1f} Tasks')

# Add labels
for x, y in zip(weekly_completion['Week'], weekly_completion['Tasks Completed']):
    if y > 0:
        plt.text(x, y + 0.3, f'{y}', ha='center', fontsize=9)

# Final formatting
plt.title('PI 25.1 Tasks Progression')
plt.xlabel('Week')
plt.ylabel('Tasks Completed')
plt.grid(True, linestyle='--', alpha=0.6)
plt.xticks(weekly_completion['Week'])
plt.legend()
plt.tight_layout()
plt.show()
