import matplotlib.pyplot as plt
import seaborn as sns

# Set professional style
sns.set_style("whitegrid", {'grid.linestyle': ':'})
plt.rcParams['font.family'] = 'DejaVu Sans'  # Clean, readable font

# =============================================
# 1. CYCLE TIME DISTRIBUTION (Boxplot + Stripplot)
# =============================================
plt.figure(figsize=(12, 6))

# Natural color palette (sky, earth, vegetation)
phase_colors = {
    "Planning": "#5D9BEC",  # Sky blue for planning
    "Execution": "#E07A5F",  # Clay red for active work
    "Total": "#81B29A"       # Sage green for completion
}

# Plot boxplot
box = sns.boxplot(
    data=df[['Backlog_to_First_InProgress', 'InProgress_to_Done', 'Backlog_to_Done']],
    palette=[phase_colors["Planning"], phase_colors["Execution"], phase_colors["Total"]],
    width=0.6,
    linewidth=1.8,
    fliersize=0  # Hide default outliers
)

# Plot stripplot (better distribution than swarmplot)
strip = sns.stripplot(
    data=df[['Backlog_to_First_InProgress', 'InProgress_to_Done', 'Backlog_to_Done']],
    palette=[phase_colors["Planning"], phase_colors["Execution"], phase_colors["Total"]],
    edgecolor="black",
    linewidth=0.5,
    size=6,
    jitter=0.2,
    alpha=0.7
)

# Customize appearance
plt.title("Workflow Phase Durations", pad=20, fontsize=14, fontweight='semibold')
plt.ylabel("Days", fontsize=12, labelpad=10)
plt.xlabel("Workflow Phase", fontsize=12, labelpad=15)

# Human-readable labels
phase_names = [
    "Planning\n(Backlog → First Action)",
    "Execution\n(Active Work → Done)", 
    "Total Cycle\n(Start to Finish)"
]
plt.xticks([0, 1, 2], phase_names, fontsize=11)

# Add legend
from matplotlib.patches import Patch
legend_elements = [
    Patch(facecolor=phase_colors["Planning"], label='Planning Phase'),
    Patch(facecolor=phase_colors["Execution"], label='Execution Phase'),
    Patch(facecolor=phase_colors["Total"], label='Total Duration')
]
plt.legend(handles=legend_elements, loc='upper right', frameon=True)

plt.tight_layout()
plt.show()

# =============================================
# 2. STAGE TRANSITION HEATMAP (Nature-Inspired)
# =============================================
plt.figure(figsize=(11, 7))

# Earth-toned colormap (light sand to dark clay)
heat = sns.heatmap(
    transition_times.astype(float),
    annot=True,
    fmt=".1f",
    cmap=sns.light_palette("#BC8034", as_cmap=True),  # Base clay color
    cbar_kws={'label': 'Days Between Stages', 'orientation': 'horizontal'},
    linewidths=0.5,
    linecolor='white',
    annot_kws={"fontsize":9, "color":"black"}
)

# Professional labels
plt.title("Stage Transition Times", pad=20, fontsize=14, fontweight='semibold')
plt.xlabel("Next Stage →", fontsize=12, labelpad=10)
plt.ylabel("← Current Stage", fontsize=12, labelpad=10)
plt.xticks(rotation=45, ha='right', fontsize=10)
plt.yticks(rotation=0, fontsize=10)

# Move colorbar below
cbar = heat.collections[0].colorbar
cbar.ax.set_position([0.25, -0.15, 0.5, 0.05])
cbar.ax.tick_params(labelsize=9)
cbar.outline.set_edgecolor('none')

plt.tight_layout()
plt.show()
