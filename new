import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# =============================================
# 1. CYCLE TIME DISTRIBUTION (Boxplot + Swarm)
# =============================================
plt.figure(figsize=(10, 6))
sns.boxplot(
    data=df[['Backlog_to_First_InProgress', 'InProgress_to_Done', 'Backlog_to_Done']],
    palette=['#4C78A8', '#F58518', '#54A24B'],
    width=0.4
)
sns.swarmplot(
    data=df[['Backlog_to_First_InProgress', 'InProgress_to_Done', 'Backlog_to_Done']],
    color='black',
    alpha=0.5,
    size=4
)
plt.title("Cycle Time Distribution (Days)", pad=15)
plt.ylabel("Days")
plt.xticks(
    [0, 1, 2], 
    ["Backlog → First Progress", "Active Work → Done", "Total Cycle Time"]
)
plt.grid(axis='y', alpha=0.2)
sns.despine()
plt.tight_layout()
plt.show()

# =============================================
# 2. STAGE TRANSITION HEATMAP 
# =============================================
# Calculate median time between stages
stages = [
    'Backlog', 'Ready for Development', 'In Development', 
    'Ready for Test', 'In Test', 'Ready for Deployment', 'Done'
]
transition_times = pd.DataFrame(index=stages[:-1], columns=stages[1:])

for i, start_stage in enumerate(stages[:-1]):
    for j, end_stage in enumerate(stages[i+1:], i+1):
        col_name = f"{start_stage}_to_{end_stage}"
        if col_name in df.columns:
            transition_times.loc[start_stage, end_stage] = df[col_name].median()

plt.figure(figsize=(10, 6))
sns.heatmap(
    transition_times.astype(float), 
    annot=True, fmt=".1f",
    cmap="YlOrRd", 
    cbar_kws={'label': 'Median Days'}
)
plt.title("Median Time Between Stages", pad=15)
plt.xlabel("To Stage")
plt.ylabel("From Stage")
plt.tight_layout()
plt.show()
